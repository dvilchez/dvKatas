These problems will be a little more demanding. You’ve used Ruby a little longer, so the gloves are off. These examples will force you to do a little more analytical thinking.

Find:

Find out how to access files with and without code blocks. What is the benefit of the code block?

How would you translate a hash to an array? Can you translate arrays to hashes?

Can you iterate through a hash?

You can use Ruby arrays as stacks. What other common data structures do arrays support?

Do:

Print the contents of an array of sixteen numbers, four numbers at a time, using just each. Now, do the same with each_slice in Enumerable.

The Tree class was interesting, but it did not allow you to specify a new tree with a clean user interface. Let the initializer accept a nested structure of hashes. You should be able to specify a tree like this: {’grandpa’ => { ’dad’ => {’child 1’ => {}, ’child 2’ => {} }, ’uncle’ => {’child 3’ => {}, ’child 4’ => {} } } }.

Write a simple grep that will print the lines of a file having any occurrences of a phrase anywhere in that line. You will need to do a simple regular expression match and read lines from a file. (This is surprisingly simple in Ruby.) If you want, include line numbers.